# -*- coding: utf-8 -*-
"""Password Generator.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1N4Qy7TteGFjq1DwBO1txeWWQsDpknQLR

Source: https://geekflare.com/password-generator-python-code/
"""

# necessary imports
import secrets
import string
import easygui

# define the alphabet
letters = string.ascii_letters
digits = string.digits
special_chars = string.punctuation

alphabet = letters + digits + special_chars

# Enter configuration
msg = "Enter your preference"
title = "Password generator"
fieldNames = ["Length","Output Qty","Special Char Limit"]
fieldValues = []  # we start with blanks for the values
fieldValues = easygui.multenterbox(msg,title, fieldNames)

# make sure that none of the fields was left blank
while 1:
    if fieldValues == None: break
    errmsg = ""
    for i in range(len(fieldNames)):
        if fieldValues[i].strip() == "":
            errmsg += ('"%s" is a required field.\n\n' % fieldNames[i])
    if errmsg == "":
        break # no problems found
    fieldValues = easygui.multenterbox(errmsg, title, fieldNames, fieldValues)

# Fix password length
pwd_length = int(fieldValues[0])

# How many outputs
output = int(fieldValues[1])

# Max special chars
special_limit = int(fieldValues[2])

counter = 0
pwd_list = []
for j in range(output):
  # generate a password string
  pwd = ''
  for i in range(pwd_length):
    choice_char = secrets.choice(alphabet)
    pwd += ''.join(choice_char)
    # Disable special char after reach to limit
    if choice_char in special_chars:
      counter += 1
      if counter >= special_limit:
        alphabet = letters + digits
  pwd_list.append(pwd)
#print(pwd_list)
  
#Popup results
easygui.choicebox(
  "Length: " + str(pwd_length) + "\n" +
  "Output Qty: " + str(output) + "\n" +
  "Special Limit: " + str(special_limit),
  "Choose Password",pwd_list
  )